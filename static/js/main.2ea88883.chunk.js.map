{"version":3,"sources":["styled.js","components/Section.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","index.js"],"names":["FontFamily","MarginLeft","Border","InputStyles","LabelStyles","ButtonStyles","Header","styled","h2","Form","form","FormInput","input","FormLabel","label","Input","Label","Button","button","ListItemButton","ListItem","li","Section","title","children","ContactListItem","id","name","number","onContactDeletion","trim","type","onClick","ContactList","contacts","map","ContactForm","state","handleInputChange","e","target","value","setState","handleFormSubmission","preventDefault","checkPhoneNumber","props","onFormSubmission","error","text","width","delay","test","this","onSubmit","onChange","disabled","Component","Filter","filter","onInputChange","App","isInContacts","alert","prevState","uuidv4","some","contact","toLowerCase","handleContactDeletion","getVisibleContacts","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ea88883.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst FontFamily = `\r\n  font-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\r\n`;\r\n\r\nconst MarginLeft = `\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst Border = `\r\n  border: 2px solid #c0c0c0;\r\n  border-radius: 6px;\r\n`;\r\n\r\nconst InputStyles = `\r\n  display: flex;\r\n  width: 200px;\r\n  height: 20px;\r\n  margin-bottom: 12px;\r\n  transition: all 0.16s linear;\r\n  ${Border}\r\n\r\n  &:focus {\r\n    border: 2px solid #87cefa;\r\n    outline: none;\r\n    box-shadow: 0px 0 6px #87cefa;\r\n  }\r\n`;\r\n\r\nconst LabelStyles = `\r\n  ${FontFamily}\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ButtonStyles = `\r\n  width: 120px;\r\n  height: 26px;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  transition: all 0.1s linear;\r\n  ${Border}\r\n\r\n  &:active {\r\n    border: 2px solid #87cefa;\r\n    outline: none;\r\n    background-color: #00bfff;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\n// const FontSize = `\r\n//   font-size: 20px;\r\n// `;\r\n\r\n// const FontSettings = `\r\n//   ${FontSize}\r\n//   ${FontFamily}\r\n// `;\r\n\r\nexport const Header = styled.h2`\r\n  ${FontFamily}\r\n  ${MarginLeft}\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  ${MarginLeft}\r\n  width: 220px;\r\n  margin-right: 0;\r\n  border: 2px solid #696969;\r\n  border-radius: 6px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  ${InputStyles}\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  ${LabelStyles}\r\n  margin-left: 1px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  ${InputStyles}\r\n  ${MarginLeft}\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  ${LabelStyles}\r\n  ${MarginLeft}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  ${ButtonStyles}\r\n`;\r\n\r\nexport const ListItemButton = styled.button`\r\n  ${ButtonStyles}\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  ${FontFamily}\r\n  font-size: 20px;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\n// export const FeedbackButton = styled.button`\r\n//   width: 100px;\r\n//   background-color: #fff5ee;\r\n//   height: 30px;\r\n//   margin-right: 10px;\r\n//   border: 1px solid #dcdcdc;\r\n//   border-radius: 6px;\r\n//   font-weight: 600;\r\n//   box-shadow: 1px 1px 2px #c0c0c0;\r\n//   transition: all 0.2s linear;\r\n//   cursor: pointer;\r\n\r\n//   &:hover {\r\n//     background-color: #da70d6;\r\n//   }\r\n\r\n//   &:focus {\r\n//     outline: none;\r\n//     border: 1px dotted #bc8f8f;\r\n//     background-color: #fff0f5;\r\n//     width: 110px;\r\n//   }\r\n// `;\r\n\r\n// export const FeedbackContainer = styled.div`\r\n//   ${FontSettings}\r\n// `;\r\n\r\n// export const NotificationContainer = styled.div`\r\n//   margin-top: 20px;\r\n//   ${FontSettings}\r\n// `;\r\n","import React from \"react\";\r\nimport { Header } from \"../styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      {title && (\r\n        <>\r\n          <Header>{title}</Header>\r\n        </>\r\n      )}\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport { ListItem, ListItemButton } from \"../styled\";\r\n\r\nconst ContactListItem = ({ id, name, number, onContactDeletion }) => {\r\n  return (\r\n    <ListItem>\r\n      {name.trim()}: {number}\r\n      <ListItemButton type=\"button\" onClick={() => onContactDeletion(id)}>\r\n        Delete\r\n      </ListItemButton>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onContactDeletion }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onContactDeletion={onContactDeletion}\r\n        ></ContactListItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onContactDeletion: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport { Form, FormInput, FormLabel, Button } from \"../styled\";\r\nimport \"@pnotify/core/dist/PNotify.css\";\r\nimport \"@pnotify/core/dist/BrightTheme.css\";\r\nimport { error } from \"@pnotify/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    onFormSubmission: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmission = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (!this.checkPhoneNumber(number)) {\r\n      error({\r\n        text: \"Wrong phone number format. It must look like this: xxx-xx-xx\",\r\n        width: \"300px\",\r\n        delay: 3000,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n\r\n    this.props.onFormSubmission(name, number);\r\n  };\r\n\r\n  checkPhoneNumber = (number) => {\r\n    const format = /\\d{3}[-]\\d{2}[-]\\d{2}$/;\r\n\r\n    const isValid = format.test(number);\r\n\r\n    return isValid ? number : \"\";\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleFormSubmission}>\r\n        <FormLabel>\r\n          Name\r\n          <FormInput\r\n            type=\"text\"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </FormLabel>\r\n\r\n        <FormLabel>\r\n          Number\r\n          <FormInput\r\n            type=\"tel\"\r\n            value={number}\r\n            name={\"number\"}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </FormLabel>\r\n        <Button type=\"submit\" disabled={!name || !number}>\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Label } from \"../styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, onInputChange }) => {\r\n  return (\r\n    <Label>\r\n      Find contacts by name\r\n      <Input\r\n        type=\"text\"\r\n        value={filter}\r\n        name=\"filter\"\r\n        onChange={onInputChange}\r\n      ></Input>\r\n    </Label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onInputChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport ContactList from \"./components/ContactList\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmission = (name, number) => {\n    if (this.isInContacts(name)) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, { id: uuidv4(), name, number }],\n    }));\n  };\n\n  isInContacts = (name) => {\n    return this.state.contacts.some(\n      (contact) => name.toLowerCase() === contact.name.toLowerCase()\n    );\n  };\n\n  handleContactDeletion = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  // handleFormSubmission = (e) => {\n  //   e.preventDefault();\n  //   const { name, number } = this.state;\n\n  //   if (!this.checkPhoneNumber(number)) {\n  //     error({\n  //       text: \"Wrong phone number format. It must look like this: xxx-xx-xx\",\n  //       width: \"300px\",\n  //       delay: 3000,\n  //     });\n  //     return;\n  //   }\n\n  //   this.setState((prevState) => ({\n  //     name: \"\",\n  //     contacts: [...prevState.contacts, { id: uuidv4(), name, number }],\n  //     number: \"\",\n  //   }));\n  // };\n\n  getVisibleContacts = (e) => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm onFormSubmission={this.handleFormSubmission} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter filter={filter} onInputChange={this.handleInputChange} />\n          <ContactList\n            contacts={visibleContacts}\n            onContactDeletion={this.handleContactDeletion}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}